package be.vdab.repositories;

import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.ConcurrentHashMap;

import org.springframework.stereotype.Repository;

import be.vdab.entities.Brouwer;
import be.vdab.valueobjects.Adres;

@Repository
class InMemoryBrouwerRepository implements BrouwerRepository {
	private ConcurrentHashMap<Long, Brouwer> DB = new ConcurrentHashMap<>();

	InMemoryBrouwerRepository() {
		DB.put(1L, new Brouwer(1L, "Wilfried Maris", 15513, 
				new Adres("Kempenlaan", "15", 3600, "Genk")));
		DB.put(1L, new Brouwer(1L, "Dennis Teunis", 19512, 
				new Adres("Raralaan", "19", 3500, "Hasselt")));
		DB.put(1L, new Brouwer(1L, "Linda Loiacono", 210, 
				new Adres("Stratidaloia", "30", 2200, "Italia")));
	}

	@Override
	public void create(Brouwer brouwer) {
		DB.put(brouwer.getBrouwerNr(), brouwer);
	}

	@Override
	public Brouwer[] findAll() {
		return (Brouwer[]) DB.values().toArray();
	}

	@Override
	public Brouwer[] findByNaam(String beginNaam) {
		List<Brouwer> brouwers = new ArrayList<>();
		for(Brouwer brouwer : DB.values()){
			if(brouwer.getNaam().contains(beginNaam)){
				brouwers.add(brouwer);
			}
		}
		return brouwers.toArray();
	}

}
