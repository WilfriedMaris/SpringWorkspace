package be.vdab.restservices;

import static
org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
import static
org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import java.math.BigDecimal;
import java.time.LocalDate;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.test.context.web.WebAppConfiguration;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.context.WebApplicationContext;

import com.sun.org.apache.xerces.internal.util.Status;

import be.vdab.datasource.TestDataSourceConfig;
import be.vdab.entities.Filiaal;
import be.vdab.repositories.TestRepositoriesConfig;
import be.vdab.services.FiliaalService;
import be.vdab.services.ServicesConfig;
import be.vdab.valueobjects.Adres;
import be.vdab.web.ControllersConfig;

@RunWith(SpringRunner.class)
@ContextConfiguration(classes = {TestDataSourceConfig.class, TestRepositoriesConfig.class, 
		ServicesConfig.class, ControllersConfig.class, RestControllersConfig.class})
@WebAppConfiguration
@Transactional
public class FiliaalRestControllerTest {
	@Autowired
	private WebApplicationContext context;
	@Autowired
	private FiliaalService filiaalService;
	private Filiaal filiaal;
	private MockMvc mvc;
	
	@Before
	public void before(){
		filiaal = new Filiaal("naam", true, BigDecimal.TEN, LocalDate.now(), new Adres("straat", "huisNr", 1000, "gemeente"));
		filiaalService.create(filiaal);
		mvc = MockMvcBuilders.webAppContextSetup(context).build();
	}
	
	@Test
	public void filiaalLezenDatNietBestaat() throws Exception{
		mvc.perform(get("/filialen/-666").accept(MediaType.APPLICATION_XML)).andExpect(Status())
	}
	

}
