package be.vdab.repositories;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.ConcurrentHashMap;

import org.springframework.stereotype.Repository;

import be.vdab.entities.Brouwer;
import be.vdab.valueobjects.Adres;

@Repository
class InMemoryBrouwerRepository implements BrouwerRepository {
	private ConcurrentHashMap<Long, Brouwer> DB = new ConcurrentHashMap<>();

	InMemoryBrouwerRepository() {
		DB.put(1L, new Brouwer(1, "Wilfried Maris", 
				new Adres("Kempenlaan", "15", 3600, "Genk"), 15513));
		DB.put(2L, new Brouwer(2, "Dennis Teunis", 
				new Adres("Raralaan", "19", 3500, "Hasselt"), 19512));
		DB.put(3L, new Brouwer(3, "Linda Loiacono",
				new Adres("Stratidaloia", "30", 2200, "Italia"), 210));
	}

	@Override
	public void create(Brouwer brouwer) {
		brouwer.setId(Collections.max(DB.keySet()) + 1);
		DB.put(brouwer.getId(), brouwer);
	}

	@Override
	public List<Brouwer> findAll() {
		return new ArrayList<>(DB.values());
	}

	@Override
	public Brouwer[] findByNaam(String beginNaam) {
		List<Brouwer> brouwers = new ArrayList<>();
		for(Brouwer brouwer : DB.values()){
			if(brouwer.getNaam().contains(beginNaam)){
				brouwers.add(brouwer);
			}
		}
		return (Brouwer[]) brouwers.toArray();
	}

}
